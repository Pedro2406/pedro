1) def imprimir_informacoes(nome, idade, cidade):
    print(f"Nome: {nome} - Idade: {idade} - Cidade: {cidade}!", end='\n')

# Teste da função
imprimir_informacoes("Alice", 25, "São Paulo")



2) def calculadora():
    # Solicita os números e a operação
    numero1 = float(input("Digite o primeiro número: "))
    numero2 = float(input("Digite o segundo número: "))
    operacao = input("Digite a operação desejada ('+', '-', '*' ou '/'): ")
    
    # Calcula e imprime o resultado
    if operacao == '+':
        resultado = numero1 + numero2
    elif operacao == '-':
        resultado = numero1 - numero2
    elif operacao == '*':
        resultado = numero1 * numero2
    elif operacao == '/':
        if numero2 != 0:
            resultado = numero1 / numero2
        else:
            resultado = "Erro: Divisão por zero!"
    else:
        resultado = "Operação inválida!"
    
    print(f"O resultado é: {resultado}")




3) def lista_de_compras():
    # Solicita a entrada do usuário
    itens = input("Digite os itens da lista de compras, separados por vírgula: ")
    
    # Converte a entrada em uma lista
    lista_itens = [item.strip() for item in itens.split(',')]
    
    # Imprime cada item da lista
    for i, item in enumerate(lista_itens, start=1):
        print(f"Item {i}: {item}")




4) lista_de_compras()

40def converter_temperatura():
    # Solicita a temperatura em Celsius
    celsius = float(input("Digite a temperatura em graus Celsius: "))
    
    # Converte para Fahrenheit
    fahrenheit = (celsius * 9/5) + 32
    
    # Imprime o resultado
    print(f"A temperatura em Fahrenheit é: {fahrenheit}")




5) Teste da função
converter_temperatura()


def coletar_nomes():
    nomes = []
    
    while True:
        nome = input("Digite um nome (ou 'sair' para terminar): ")
        if nome.lower() == 'sair':
            break
        nomes.append(nome)
    
    # Imprime todos os nomes digitados
    for i, nome in enumerate(nomes, start=1):
        print(f"Nome {i}: {nome}")

# Teste da função
coletar_nomes(
